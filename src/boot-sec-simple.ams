; nasm -fbin boot-sec-simple.ams -o boot-sec-simple.bin && qemu-system-x86_64 -drive format=raw,file=boot-sec-simple.bin
[org 0x7c00]

mov		bp, 0x8000

xor		ax, ax
mov		ah, 0x0e 			; tty mode
mov		bx, hello_string	; move the address of the label to bx

loop:	mov		al, [bx]	; move the value bx points to in al
		cmp		al, 0x00	; check if al contains '\0'
		je		exit		; exit if we reached '\0'
		mov 	cx, 	$
		jmp 	dummy
		int 	0x10		; print value in al
		inc		bx			; increment the pointer in bx
		jmp		loop		; repeat

exit: 	jmp exit 			; infinite loop

dummy:	add  	cx, 0x05
		jmp 	cx

hello_string:
	db "Hello, world!", 0

; padding and magic number
times 510 - ($-$$) db 0
dw 0xaa55